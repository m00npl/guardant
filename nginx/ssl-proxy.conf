# SSL Proxy Configuration for guardant.me
# This can be used as an alternative to nginx proxy manager

server {
    listen 80;
    server_name guardant.me;
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    server_name guardant.me;

    # SSL configuration (adjust paths as needed)
    ssl_certificate /etc/letsencrypt/live/guardant.me/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/guardant.me/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;

    # Timeouts
    proxy_connect_timeout 600s;
    proxy_send_timeout 600s;
    proxy_read_timeout 600s;
    send_timeout 600s;
    
    # Client body size
    client_max_body_size 100M;
    client_body_timeout 600s;
    client_header_timeout 600s;

    # Keepalive
    keepalive_timeout 65;
    keepalive_requests 100;

    # Proxy to GuardAnt nginx proxy
    location / {
        proxy_pass http://localhost:8080;
        
        # Headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        
        # WebSocket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        
        # Buffering
        proxy_buffering off;
        proxy_request_buffering off;
        
        # Error handling
        proxy_intercept_errors off;
        
        # Disable redirects
        proxy_redirect off;
    }
}

# WebSocket upgrade map
map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}