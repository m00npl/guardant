#!/bin/bash

echo "游댌 G켹캧boka diagnostyka portu 3002"

# 1. Sprawd콬 wszystkie procesy na ho콑cie
echo -e "\n1. Procesy na ho콑cie u콮ywaj캔ce portu 3002:"
sudo lsof -i :3002 -P -n | grep LISTEN || echo "Brak proces칩w na ho콑cie"
sudo ss -tlnp | grep :3002 || echo "ss: brak proces칩w"

# 2. Sprawd콬 wszystkie kontenery Docker
echo -e "\n2. Wszystkie kontenery Docker:"
docker ps -a --format "table {{.ID}}\t{{.Names}}\t{{.Status}}\t{{.Ports}}"

# 3. Sprawd콬 sie캖 Docker
echo -e "\n3. Inspekcja sieci Docker dla port 3002:"
docker network inspect bridge | grep -B5 -A5 3002 || echo "Brak w sieci bridge"
docker network inspect guardant_guardant-network | grep -B5 -A5 3002 || echo "Brak w sieci guardant"

# 4. Sprawd콬 iptables/netfilter
echo -e "\n4. Regu켹y iptables dla portu 3002:"
sudo iptables -L -n | grep 3002 || echo "Brak regu켹 iptables"

# 5. Spr칩buj uruchomi캖 prosty serwer na porcie 3002 bezpo콑rednio
echo -e "\n5. Test bezpo콑redniego bindowania na porcie 3002:"
timeout 2 python3 -m http.server 3002 2>&1 | head -5 || echo "Python server test zako켻czony"

# 6. Sprawd콬 czy port jest zaj캧ty w namespace Docker
echo -e "\n6. Sprawdzanie namespace Docker:"
docker run --rm --network host alpine sh -c "apk add --no-cache lsof && lsof -i :3002" 2>&1 || echo "Namespace test failed"

# 7. Spr칩buj z innym runtime
echo -e "\n7. Test z Node.js zamiast Bun:"
cat > /tmp/test-node-server.js << 'EOF'
const http = require('http');
const server = http.createServer((req, res) => {
  res.writeHead(200);
  res.end('OK');
});
server.listen(3002, '0.0.0.0', () => {
  console.log('Node server listening on 3002');
});
server.on('error', (err) => {
  console.error('Node server error:', err);
});
EOF

docker run --rm -v /tmp/test-node-server.js:/test.js --network guardant_guardant-network node:alpine node /test.js 2>&1 &
NODE_PID=$!
sleep 3
kill $NODE_PID 2>/dev/null || true

# 8. Sprawd콬 czy to problem z Bun
echo -e "\n8. Test Bun z r칩콮nymi konfiguracjami:"
docker exec guardant-admin-api bun --version || echo "Bun nie dost캧pny"

# 9. Sprawd콬 uprawnienia
echo -e "\n9. Uprawnienia w kontenerze:"
docker run --rm --network guardant_guardant-network guardant-admin-api sh -c "id && ls -la /app/services/api-admin/src/" | head -10