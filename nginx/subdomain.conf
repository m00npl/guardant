# Subdomain configuration for user status pages
# This handles *.guardant.me subdomains

server {
    listen 80;
    server_name ~^(?<subdomain>.+)\.guardant\.me$;

    # Skip processing for www subdomain
    if ($subdomain = "www") {
        return 301 https://guardant.me$request_uri;
    }

    # Skip processing for specific subdomains that have their own configs
    if ($subdomain ~ ^(admin|api|status)$) {
        return 404;
    }

    # Public status page for user subdomains
    location / {
        # Extract subdomain and pass to the status service
        proxy_pass http://guardant-status-frontend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Subdomain $subdomain;
        
        # Pass subdomain as header for the backend
        proxy_set_header X-Nest-Subdomain $subdomain;
    }

    # API endpoint for status data
    location /api/status/ {
        proxy_pass http://guardant-public-api:4001/api/status/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Nest-Subdomain $subdomain;
        
        # CORS headers for API access
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
        
        # Handle preflight requests
        if ($request_method = 'OPTIONS') {
            return 204;
        }
    }

    # Embed endpoint for status widget
    location /embed {
        proxy_pass http://guardant-status-frontend/embed;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Subdomain $subdomain;
        proxy_set_header X-Nest-Subdomain $subdomain;
    }

    # Widget JavaScript endpoint
    location ~ ^/widget\.js$ {
        proxy_pass http://guardant-public-api:4001/api/status/$subdomain/widget.js;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Set correct content type
        add_header Content-Type 'application/javascript' always;
        
        # CORS headers
        add_header 'Access-Control-Allow-Origin' '*' always;
    }
}

# SSL configuration for subdomains (requires wildcard certificate)
server {
    listen 443 ssl http2;
    server_name ~^(?<subdomain>.+)\.guardant\.me$;

    # SSL certificate paths (you need wildcard cert for *.guardant.me)
    ssl_certificate /etc/letsencrypt/live/guardant.me/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/guardant.me/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;

    # Skip processing for www subdomain
    if ($subdomain = "www") {
        return 301 https://guardant.me$request_uri;
    }

    # Skip processing for specific subdomains
    if ($subdomain ~ ^(admin|api|status)$) {
        return 404;
    }

    # Public status page for user subdomains
    location / {
        proxy_pass http://guardant-status-frontend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Subdomain $subdomain;
        proxy_set_header X-Nest-Subdomain $subdomain;
    }

    # API endpoint for status data
    location /api/status/ {
        proxy_pass http://guardant-public-api:4001/api/status/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Nest-Subdomain $subdomain;
        
        # CORS headers
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
        
        if ($request_method = 'OPTIONS') {
            return 204;
        }
    }

    # Embed endpoint
    location /embed {
        proxy_pass http://guardant-status-frontend/embed;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Subdomain $subdomain;
        proxy_set_header X-Nest-Subdomain $subdomain;
    }

    # Widget JavaScript
    location ~ ^/widget\.js$ {
        proxy_pass http://guardant-public-api:4001/api/status/$subdomain/widget.js;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        add_header Content-Type 'application/javascript' always;
        add_header 'Access-Control-Allow-Origin' '*' always;
    }
}